apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: power-plant-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: power-plant
spec:
  hosts:
  - "*"
  gateways:
  - power-plant-gateway
  http:
  - match:
    - uri:
        prefix: /meterings
    route:
    - destination:
        host: metering
        subset: v2
        port:
          number: 8080

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: power-plant
spec:
  hosts:
  - "*"
  gateways:
  - power-plant-gateway
  http:
  - match:
    - uri:
        exact: /billings
    route:
    - destination:
        host: billing
        port:
          number: 8080

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: power-plant
spec:
  hosts:
  - "*"
  gateways:
  - power-plant-gateway
  http:
  - match:
    - uri:
        exact: /bids
    route:
    - destination:
        host: bid
        port:
          number: 8080

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: power-plant
spec:
  hosts:
  - "*"
  gateways:
  - power-plant-gateway
  http:
  - match:
    - uri:
        exact: /model-infos
    - uri:
        exact: /prices
    route:
    - destination:
        host: master
        port:
          number: 8080

---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: metering
spec:
  host: metering
  subsets:
  - name: v2
    labels:
      version: v2

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: billing
spec:
  host: billing
  subsets:
  - name: v1
    # labels:
    #   version: v1

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: master
spec:
  host: master
  subsets:
  - name: v1
    # labels:
    #   version: v1

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: bid
spec:
  host: bid
  subsets:
  - name: v1
    # labels:
    #   version: v1

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: metering
  labels:
    app: metering
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metering
  template:
    metadata:
      labels:
        app: metering
        version: v2
    spec:
      containers:
        - name: metering
          image: jinyoung/metering:v2
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing
  labels:
    app: billing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: billing
  template:
    metadata:
      labels:
        app: billing
    spec:
      containers:
        - name: billing
          image: jinyoung/billing:v2
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bid
  labels:
    app: bid
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bid
  template:
    metadata:
      labels:
        app: bid
    spec:
      containers:
        - name: bid
          image: jinyoung/bid:v2
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: master
  labels:
    app: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: master
  template:
    metadata:
      labels:
        app: master
    spec:
      containers:
        - name: master
          image: jinyoung/master:v2
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5


---


apiVersion: v1
kind: Service
metadata:
  name: metering
  labels:
    app: metering
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: metering


---


apiVersion: v1
kind: Service
metadata:
  name: billing
  labels:
    app: billing
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: billing


---


apiVersion: v1
kind: Service
metadata:
  name: bid
  labels:
    app: bid
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: bid


---


apiVersion: v1
kind: Service
metadata:
  name: master
  labels:
    app: master
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: master

